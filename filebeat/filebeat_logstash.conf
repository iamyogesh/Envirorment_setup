input {
beats {
        port => 5045
    }
}
# Logic t parse log
filter {
if [type] == 'apache_log' {
grok {
   match => { "message" => "%{TIME:time} %{LOGLEVEL:log_level} %{GREEDYDATA:message}"}
	 overwrite => ["message"]
	 add_field => [ "received_at", "%{@timestamp}" ]
	 add_field => [ "received_from", "%{host}" ]
	 add_tag => [ "apache" ]
}
}


if "_grokparsefailure" in [tags] {
      grok {

         match => { "message" => "%{TIME:time} %{LOGLEVEL:log_level} %{GREEDYDATA:message}"}
         overwrite => ["message"]
         add_field => [ "received_at", "%{@timestamp}" ]
         add_field => [ "received_from", "%{host}" ]
         remove_tag => ["_grokparsefailure"]
}
}

else if [type] == 'tomcat_log' {
    grok {
   match => { "message" => "%{TIME:time}\s*%{LOGLEVEL:log_level}%{NUMBER:imei}"}
   overwrite => ["message"]
	 add_field => [ "received_at", "%{@timestamp}" ]
	 add_field => [ "received_from", "%{host}" ]
	 add_tag => [ "tomcat_withought_imei" ]
}
}

if "_grokparsefailure" in [tags] {
             
      grok {
 match => { "message" => "%{TIME:time}\s*%{LOGLEVEL:log_level}%{GREEDYDATA:message}%{NUMBER:imei}"}
         #overwrite => ["message"]
         add_field => [ "received_at", "%{@timestamp}" ]
         add_field => [ "received_from", "%{host}" ]
         add_tag => [ "tomcat_with_imei" ]
         remove_tag => ["_grokparsefailure"]
}
}
}

output {
#elasticsearch hostname
elasticsearch {
hosts => ["*.*.*.*:9200"]
index => "filebeat_tomcat_index-%{+YYYY.MM.dd}"
document_type => "%{[@metadata][type]}"
}
stdout { codec => rubydebug }
}
